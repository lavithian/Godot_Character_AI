[gd_scene load_steps=6 format=3 uid="uid://cxbk7v3di3kd5"]

[sub_resource type="GDScript" id="GDScript_gq57f"]
script/source = "extends CharacterBody3D

@export var player : Node3D

const speed = 5.0
const orbit_speed : float = 3.0
const lunge_speed : float = 10.0
var in_range : bool = false
var hit_enemy : int = 1
var current_state = state.MOVE
const damage : int = 10

enum state {
	MOVE,
	ORBIT,
	LUNGE,
	ATTACK
}

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _physics_process(delta):
	#print(\"Current state: \" + name + ' ' + str(current_state))
	
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta
		
	if player:
		if is_on_floor():
			match current_state: 
				state.MOVE:
					move_to_player()
				state.ORBIT:
					orbit_player()
				state.LUNGE:
					lunge_player()
				state.ATTACK:
					attack_player()
	move_and_slide()

func move_to_player():
	look_at(player.global_position)
	var direction = global_position.direction_to(player.global_position)
	if direction:
		velocity = direction * speed
		
func orbit_player():
	var direction = (global_transform.origin - player.global_transform.origin).normalized()
	var orbit_direction = Vector3(
		0,
		hit_enemy,
		0
	).cross(direction).normalized()
	velocity = orbit_direction * orbit_speed
	look_at(player.global_transform.origin, Vector3.UP)

func lunge_player():
	# make a lunge at the player
	velocity.x = 0
	velocity.z = 0
#	print(\"Lunge!\")
	await get_tree().create_timer(1).timeout
	var direction = global_position.direction_to(player.global_position)
	if direction:
		velocity = direction * lunge_speed
	await get_tree().create_timer(1).timeout
	velocity.x = 0
	velocity.z = 0
	if in_range:
		current_state = state.ATTACK
	else:
		current_state = state.MOVE

func attack_player():
	# attack player
	#print(\"Attack!\")
	current_state = state.MOVE
	pass

func _on_area_3d_body_entered(body):
	#print(\"Enemy Enter: \" + str(body))
	if body.name == \"Player\":
		in_range = true
	current_state = state.ORBIT

func _on_area_3d_body_exited(body):
	if body.name == \"Player\":
		in_range = false
	current_state = state.MOVE

func _on_area_3d_area_entered(area):
	if area.collision_layer == 8:
		hit_enemy = -hit_enemy

func _on_timer_timeout():
	var rng = RandomNumberGenerator.new().randi_range(0, 4)
	if rng == 3:
		if current_state == state.ORBIT:
			current_state = state.LUNGE
	pass # Replace with function body.
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_lo8ds"]
albedo_color = Color(0.87451, 0.858824, 0, 1)

[sub_resource type="SphereMesh" id="SphereMesh_n0cta"]
material = SubResource("StandardMaterial3D_lo8ds")

[sub_resource type="SphereShape3D" id="SphereShape3D_x8ubr"]

[sub_resource type="SphereShape3D" id="SphereShape3D_7sxc2"]

[node name="enemy_ranged_01" type="CharacterBody3D"]
collision_layer = 2
script = SubResource("GDScript_gq57f")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_n0cta")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("SphereShape3D_x8ubr")

[node name="Area3D" type="Area3D" parent="."]
transform = Transform3D(3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0)
collision_layer = 8
collision_mask = 10

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0)
shape = SubResource("SphereShape3D_7sxc2")

[node name="Timer" type="Timer" parent="."]
autostart = true

[connection signal="area_entered" from="Area3D" to="." method="_on_area_3d_area_entered"]
[connection signal="body_entered" from="Area3D" to="." method="_on_area_3d_body_entered"]
[connection signal="body_exited" from="Area3D" to="." method="_on_area_3d_body_exited"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
